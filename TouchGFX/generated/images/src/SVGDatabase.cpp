// Generated by imageconverter. Please, do not edit!

#include <images/SVGDatabase.hpp>

using namespace touchgfx;

static const uint8_t svg_rocket_shape_22_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_22_points[] = {
    225.4100f, 402.5790f, 224.0950f, 402.5790f, 222.7770f, 402.3200f, 221.5340f, 401.7970f, 218.6440f, 400.5820f, 216.4920f, 398.0830f, 215.7190f, 395.0470f, 198.8280f, 328.7070f,
    197.4650f, 323.3540f, 200.7000f, 317.9110f, 206.0520f, 316.5490f, 211.4010f, 315.1830f, 216.8470f, 318.4200f, 218.2100f, 323.7720f, 231.6900f, 376.7200f, 239.3530f, 371.3610f, 246.5790f, 365.3010f, 253.2710f, 358.6160f,
    284.6310f, 327.2560f, 301.6490f, 283.8310f, 299.9550f, 239.4800f, 299.7450f, 233.9610f, 304.0480f, 229.3170f, 309.5660f, 229.1060f, 315.0750f, 228.8730f, 319.7300f, 233.1990f, 319.9410f, 238.7170f, 321.8440f, 288.6140f, 302.6980f, 337.4720f, 267.4090f, 372.7610f,
    256.2850f, 383.8740f, 243.8420f, 393.4520f, 230.4230f, 401.2310f, 228.8810f, 402.1260f, 227.1480f, 402.5790f, 225.4100f, 402.5790f,
};

static const VGFixedColor svg_rocket_shape_22_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_22 = {
    15, 72,                                                   // numCommands, numPoints
    svg_rocket_shape_22_commands,                             // commands
    svg_rocket_shape_22_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_22_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 198.5164f, 229.0970f, 320.0705f, 402.5790f },           // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_rocket_shape_21_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_21_points[] = {
    90.2200f, 217.9290f, 89.3880f, 217.9290f, 88.5500f, 217.8250f, 87.7430f, 217.6200f, 21.4130f, 200.7400f, 18.3760f, 199.9670f, 15.8760f, 197.8140f, 14.6620f, 194.9260f,
    13.4470f, 192.0370f, 13.6570f, 188.7450f, 15.2280f, 186.0340f, 23.0060f, 172.6160f, 32.5830f, 160.1740f, 43.6950f, 149.0520f, 78.9760f, 113.7710f, 127.8140f, 94.6070f, 177.6830f, 96.5150f, 183.0520f, 96.6910f, 187.3540f, 101.0980f, 187.3540f, 106.5090f,
    187.3540f, 112.0310f, 182.8820f, 116.5090f, 177.3590f, 116.5090f, 177.3490f, 177.2220f, 116.5090f, 177.0950f, 116.5070f, 176.9680f, 116.5020f, 132.6300f, 114.8030f, 89.2030f, 131.8270f, 57.8410f, 163.1900f,
    51.1570f, 169.8790f, 45.0990f, 177.1040f, 39.7400f, 184.7660f, 92.4700f, 198.1850f, 96.9050f, 199.2090f, 100.2150f, 203.1830f, 100.2150f, 207.9280f, 100.2150f, 213.4510f, 95.7430f, 217.9290f, 90.2200f, 217.9290f,
};

static const VGFixedColor svg_rocket_shape_21_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_21 = {
    17, 79,                                                   // numCommands, numPoints
    svg_rocket_shape_21_commands,                             // commands
    svg_rocket_shape_21_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_21_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 13.8800f, 96.3850f, 187.3540f, 217.9290f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_22                                      // next
};

static const uint8_t svg_rocket_shape_20_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_20_points[] = {
    395.4100f, 141.9800f, 392.8500f, 141.9800f, 390.2920f, 141.0030f, 388.3390f, 139.0510f, 277.4090f, 28.1200f, 273.5040f, 24.2150f, 273.5040f, 17.8830f, 277.4090f, 13.9770f,
    281.3170f, 10.0720f, 287.6470f, 10.0740f, 291.5520f, 13.9770f, 402.4820f, 124.9080f, 406.3870f, 128.8130f, 406.3870f, 135.1450f, 402.4820f, 139.0510f, 400.5280f, 141.0030f, 397.9690f, 141.9800f, 395.4100f, 141.9800f,
};

static const VGFixedColor svg_rocket_shape_20_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_20 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_20_commands,                             // commands
    svg_rocket_shape_20_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_20_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 274.4803f, 11.0490f, 405.4107f, 141.9800f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_21                                      // next
};

static const uint8_t svg_rocket_shape_19_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_19_points[] = {
    349.1900f, 215.3890f, 346.6310f, 215.3890f, 344.0720f, 214.4120f, 342.1190f, 212.4600f, 338.2140f, 208.5550f, 338.2140f, 202.2230f, 342.1190f, 198.3170f, 362.0040f, 178.4330f, 376.7610f, 155.0020f, 385.9820f, 128.6730f,
    397.7180f, 95.1610f, 399.6080f, 59.4230f, 391.5180f, 24.9400f, 357.0380f, 16.8510f, 321.2970f, 18.7410f, 287.7850f, 30.4760f, 261.4560f, 39.6970f, 238.0240f, 54.4550f, 218.1400f, 74.3390f, 214.2350f, 78.2430f, 207.9040f, 78.2440f, 203.9970f, 74.3390f,
    200.0920f, 70.4340f, 200.0920f, 64.1020f, 203.9970f, 60.1960f, 226.0220f, 38.1720f, 251.9880f, 21.8210f, 281.1730f, 11.6000f, 320.3310f, -2.1110f, 362.2310f, -3.6900f, 402.3440f, 7.0390f, 405.7980f, 7.9630f, 408.4960f, 10.6610f, 409.4200f, 14.1150f,
    420.1480f, 54.2290f, 418.5710f, 96.1290f, 404.8570f, 135.2850f, 394.6360f, 164.4700f, 378.2860f, 190.4350f, 356.2610f, 212.4600f, 354.3090f, 214.4120f, 351.7500f, 215.3890f, 349.1900f, 215.3890f,
};

static const VGFixedColor svg_rocket_shape_19_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_19 = {
    16, 86,                                                   // numCommands, numPoints
    svg_rocket_shape_19_commands,                             // commands
    svg_rocket_shape_19_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_19_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 201.0683f, 0.0099f, 416.4488f, 215.3890f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_20                                      // next
};

static const uint8_t svg_rocket_shape_18_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_18_points[] = {
    158.2650f, 352.7870f, 147.8170f, 352.7870f, 137.5420f, 348.7020f, 129.9250f, 341.0750f, 123.3430f, 334.4930f, 123.2500f, 334.4070f, 123.1590f, 334.3200f, 123.0700f, 334.2300f,
    75.3760f, 286.5350f, 64.3840f, 275.5290f, 60.7530f, 259.0040f, 66.1170f, 244.4260f, 80.8270f, 204.4740f, 81.2400f, 203.3540f, 81.8490f, 202.3170f, 82.6260f, 201.4130f,
    169.7660f, 99.9930f, 173.3670f, 95.8050f, 179.6790f, 95.3260f, 183.8680f, 98.9250f, 188.0570f, 102.5250f, 188.5350f, 108.8380f, 184.9360f, 113.0270f, 98.9710f, 213.0770f,
    84.8850f, 251.3340f, 82.2030f, 258.6230f, 84.0210f, 266.8900f, 89.5170f, 272.3930f, 136.9490f, 319.8260f, 137.0410f, 319.9120f, 137.1330f, 319.9990f, 137.2220f, 320.0890f,
    144.0720f, 326.9390f, 149.5690f, 332.4430f, 157.8280f, 334.2570f, 165.1200f, 331.5690f, 203.3720f, 317.4800f, 342.6740f, 197.8050f,
    346.8650f, 194.2050f, 353.1780f, 194.6860f, 356.7760f, 198.8730f, 360.3760f, 203.0620f, 359.8970f, 209.3760f, 355.7080f, 212.9750f, 215.0360f, 333.8240f, 214.1320f, 334.6010f, 213.0960f, 335.2110f, 211.9770f, 335.6230f,
    172.0360f, 350.3330f, 167.5570f, 351.9850f, 162.8930f, 352.7870f, 158.2650f, 352.7870f,
};

static const VGFixedColor svg_rocket_shape_18_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_18 = {
    27, 104,                                                  // numCommands, numPoints
    svg_rocket_shape_18_commands,                             // commands
    svg_rocket_shape_18_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_18_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 63.6728f, 96.5101f, 359.1917f, 352.7870f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_19                                      // next
};

static const uint8_t svg_rocket_shape_17_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_17_points[] = {
    177.3560f, 116.5090f, 175.0490f, 116.5090f, 172.7310f, 115.7150f, 170.8440f, 114.0940f, 166.6550f, 110.4950f, 166.1760f, 104.1820f, 169.7750f, 99.9920f, 203.4850f, 60.7520f,
    207.0830f, 56.5640f, 213.3960f, 56.0840f, 217.5870f, 59.6840f, 221.7760f, 63.2830f, 222.2550f, 69.5960f, 218.6550f, 73.7850f, 184.9450f, 113.0250f, 182.9680f, 115.3270f, 180.1700f, 116.5090f, 177.3560f, 116.5090f,
};

static const VGFixedColor svg_rocket_shape_17_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_17 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_17_commands,                             // commands
    svg_rocket_shape_17_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_17_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 167.3602f, 57.2687f, 221.0706f, 116.5090f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_18                                      // next
};

static const uint8_t svg_rocket_shape_16_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_16_points[] = {
    130.1600f, 337.1600f, 126.8260f, 337.1600f, 123.5670f, 335.4940f, 121.6700f, 332.4580f, 118.7440f, 327.7740f, 120.1690f, 321.6040f, 124.8520f, 318.6790f, 173.6520f, 288.1890f,
    178.3350f, 285.2600f, 184.5050f, 286.6860f, 187.4320f, 291.3710f, 190.3580f, 296.0550f, 188.9330f, 302.2240f, 184.2500f, 305.1500f, 135.4500f, 335.6400f, 133.8010f, 336.6700f, 131.9700f, 337.1600f, 130.1600f, 337.1600f,
};

static const VGFixedColor svg_rocket_shape_16_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_16 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_16_commands,                             // commands
    svg_rocket_shape_16_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_16_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 120.1498f, 286.6670f, 188.9522f, 337.1600f },           // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_17                                      // next
};

static const uint8_t svg_rocket_shape_15_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_15_points[] = {
    109.7200f, 316.7390f, 107.1610f, 316.7390f, 104.6020f, 315.7620f, 102.6490f, 313.8100f, 98.7440f, 309.9050f, 98.7430f, 303.5730f, 102.6480f, 299.6670f, 142.2980f, 260.0170f,
    146.2030f, 256.1130f, 152.5350f, 256.1130f, 156.4400f, 260.0170f, 160.3450f, 263.9220f, 160.3460f, 270.2540f, 156.4410f, 274.1590f, 116.7910f, 313.8090f, 114.8390f, 315.7630f, 112.2790f, 316.7390f, 109.7200f, 316.7390f,
};

static const VGFixedColor svg_rocket_shape_15_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_15 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_15_commands,                             // commands
    svg_rocket_shape_15_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_15_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 99.7197f, 257.0891f, 159.3693f, 316.7390f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_16                                      // next
};

static const uint8_t svg_rocket_shape_14_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_14_points[] = {
    89.2910f, 296.3100f, 87.4810f, 296.3100f, 85.6490f, 295.8200f, 84.0010f, 294.7890f, 79.3170f, 291.8630f, 77.8930f, 285.6930f, 80.8190f, 281.0100f, 111.3090f, 232.2100f,
    114.2360f, 227.5260f, 120.4060f, 226.1000f, 125.0890f, 229.0280f, 129.7730f, 231.9540f, 131.1970f, 238.1240f, 128.2710f, 242.8070f, 97.7810f, 291.6070f, 95.8840f, 294.6430f, 92.6250f, 296.3100f, 89.2910f, 296.3100f,
};

static const VGFixedColor svg_rocket_shape_14_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_14 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_14_commands,                             // commands
    svg_rocket_shape_14_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_14_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 79.2986f, 227.5067f, 129.7914f, 296.3100f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_15                                      // next
};

static const uint8_t svg_rocket_shape_13_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_HLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE,
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_13_points[] = {
    259.5800f, 218.5340f, 243.1060f, 218.5340f, 227.6210f, 212.1180f, 215.9760f, 200.4680f, 204.3300f, 188.8270f, 197.9140f, 173.3420f, 197.9140f, 156.8680f, 197.9140f, 140.3940f, 204.3300f, 124.9090f, 215.9790f, 113.2640f,
    227.6200f, 101.6180f, 243.1050f, 95.2020f, 259.5790f, 95.2020f, 276.0530f, 95.2020f, 291.5380f, 101.6180f, 303.1830f, 113.2670f, 314.8280f, 124.9080f, 321.2440f, 140.3930f, 321.2440f, 156.8670f, 321.2440f, 173.3390f, 314.8290f, 188.8230f, 303.1830f, 200.4670f,
    303.1830f, 303.1820f, 200.4690f, 303.1820f, 200.4680f, 303.1790f, 200.4710f, 291.5360f, 212.1190f, 276.0520f, 218.5340f, 259.5800f, 218.5340f,
    259.5800f, 115.2040f, 248.4500f, 115.2040f, 237.9880f, 119.5380f, 230.1230f, 127.4080f, 222.2490f, 135.2770f, 217.9150f, 145.7390f, 217.9150f, 156.8690f, 217.9150f, 167.9990f, 222.2490f, 178.4610f, 230.1190f, 186.3260f,
    237.9880f, 194.2000f, 248.4500f, 198.5340f, 259.5800f, 198.5340f, 270.7100f, 198.5340f, 281.1720f, 194.2000f, 289.0370f, 186.3300f, 289.0390f, 186.3290f, 289.0400f, 186.3280f, 289.0410f, 186.3260f, 296.9110f, 178.4610f, 301.2450f, 167.9990f, 301.2450f, 156.8690f,
    301.2450f, 145.7390f, 296.9110f, 135.2770f, 289.0410f, 127.4120f, 281.1720f, 119.5380f, 270.7100f, 115.2040f, 259.5800f, 115.2040f,
};

static const VGFixedColor svg_rocket_shape_13_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_13 = {
    23, 113,                                                  // numCommands, numPoints
    svg_rocket_shape_13_commands,                             // commands
    svg_rocket_shape_13_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_13_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 197.9140f, 95.2020f, 321.2440f, 218.5340f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_14                                      // next
};

static const uint8_t svg_rocket_shape_12_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_12_points[] = {
    208.5200f, 336.2390f, 205.9600f, 336.2390f, 203.4020f, 335.2620f, 201.4490f, 333.3100f, 83.1390f, 215.0000f, 79.2340f, 211.0950f, 79.2340f, 204.7630f, 83.1390f, 200.8570f,
    87.0440f, 196.9530f, 93.3760f, 196.9530f, 97.2820f, 200.8570f, 215.5920f, 319.1680f, 219.4970f, 323.0730f, 219.4970f, 329.4050f, 215.5920f, 333.3110f, 213.6390f, 335.2630f, 211.0790f, 336.2390f, 208.5200f, 336.2390f,
};

static const VGFixedColor svg_rocket_shape_12_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_12 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_12_commands,                             // commands
    svg_rocket_shape_12_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_12_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 80.2103f, 197.9290f, 218.5208f, 336.2390f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_13                                      // next
};

static const uint8_t svg_rocket_shape_11_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_11_points[] = {
    73.2900f, 411.2590f, 70.7300f, 411.2590f, 68.1720f, 410.2820f, 66.2190f, 408.3300f, 62.3140f, 404.4250f, 62.3140f, 398.0930f, 66.2190f, 394.1870f, 100.4490f, 359.9580f,
    104.3540f, 356.0540f, 110.6860f, 356.0550f, 114.5910f, 359.9580f, 118.4960f, 363.8630f, 118.4960f, 370.1950f, 114.5910f, 374.1010f, 80.3610f, 408.3300f, 78.4090f, 410.2820f, 75.8490f, 411.2590f, 73.2900f, 411.2590f,
};

static const VGFixedColor svg_rocket_shape_11_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_11 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_11_commands,                             // commands
    svg_rocket_shape_11_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_11_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 63.2903f, 357.0304f, 117.5198f, 411.2590f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_12                                      // next
};

static const uint8_t svg_rocket_shape_10_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_10_points[] = {
    10.0000f, 416.4390f, 7.4400f, 416.4390f, 4.8810f, 415.4620f, 2.9280f, 413.5090f, -0.9770f, 409.6040f, -0.9760f, 403.2720f, 2.9290f, 399.3670f, 71.3990f, 330.9070f,
    75.3040f, 327.0030f, 81.6360f, 327.0030f, 85.5410f, 330.9080f, 89.4460f, 334.8130f, 89.4450f, 341.1450f, 85.5390f, 345.0500f, 17.0690f, 413.5100f, 15.1180f, 415.4630f, 12.5590f, 416.4390f, 10.0000f, 416.4390f,
};

static const VGFixedColor svg_rocket_shape_10_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_10 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_10_commands,                             // commands
    svg_rocket_shape_10_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_10_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { -0.0003f, 327.9792f, 88.4691f, 416.4390f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_11                                      // next
};

static const uint8_t svg_rocket_shape_9_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_9_points[] = {
    28.8800f, 339.4590f, 26.3210f, 339.4590f, 23.7610f, 338.4820f, 21.8090f, 336.5300f, 17.9040f, 332.6250f, 17.9040f, 326.2930f, 21.8090f, 322.3870f, 42.3490f, 301.8470f,
    46.2540f, 297.9430f, 52.5860f, 297.9430f, 56.4920f, 301.8470f, 60.3970f, 305.7520f, 60.3970f, 312.0840f, 56.4920f, 315.9900f, 35.9520f, 336.5300f, 33.9990f, 338.4820f, 31.4400f, 339.4590f, 28.8800f, 339.4590f,
};

static const VGFixedColor svg_rocket_shape_9_fill = {
    0xff5e2a41 // ARGB
};

static const VGShape svg_rocket_shape_9 = {
    9, 36,                                                    // numCommands, numPoints
    svg_rocket_shape_9_commands,                              // commands
    svg_rocket_shape_9_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_9_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 18.8802f, 298.9190f, 59.4207f, 339.4590f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_10                                      // next
};

static const uint8_t svg_rocket_shape_8_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_8_points[] = {
    119.7900f, 237.5090f, 89.3000f, 286.3090f, 82.4400f, 279.4590f, 74.1700f, 271.1790f, 71.4600f, 258.8590f, 75.5000f, 247.8790f,
    90.2100f, 207.9290f, 119.7900f, 237.5090f,
};

static const VGFixedColor svg_rocket_shape_8_fill = {
    0xffe6b263 // ARGB
};

static const VGShape svg_rocket_shape_8 = {
    7, 16,                                                    // numCommands, numPoints
    svg_rocket_shape_8_commands,                              // commands
    svg_rocket_shape_8_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_8_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 73.6533f, 207.9290f, 119.7900f, 286.3090f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_9                                       // next
};

static const uint8_t svg_rocket_shape_7_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_7_points[] = {
    149.3700f, 267.0890f, 109.7200f, 306.7390f, 89.3000f, 286.3090f, 119.7900f, 237.5090f,
};

static const VGFixedColor svg_rocket_shape_7_fill = {
    0xffe6b263 // ARGB
};

static const VGShape svg_rocket_shape_7 = {
    5, 8,                                                     // numCommands, numPoints
    svg_rocket_shape_7_commands,                              // commands
    svg_rocket_shape_7_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_7_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 89.3000f, 237.5090f, 149.3700f, 306.7390f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_8                                       // next
};

static const uint8_t svg_rocket_shape_6_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_6_points[] = {
    177.3500f, 106.5090f, 90.2100f, 207.9290f, 23.8800f, 191.0490f, 31.1200f, 178.5590f, 40.0900f, 166.8090f, 50.7700f, 156.1190f,
    85.5800f, 121.3090f, 131.7400f, 104.7690f, 177.3500f, 106.5090f,
};

static const VGFixedColor svg_rocket_shape_6_fill = {
    0xfff2d59f // ARGB
};

static const VGShape svg_rocket_shape_6 = {
    6, 18,                                                    // numCommands, numPoints
    svg_rocket_shape_6_commands,                              // commands
    svg_rocket_shape_6_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_6_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 23.8800f, 106.3848f, 177.3500f, 207.9290f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_7                                       // next
};

static const uint8_t svg_rocket_shape_5_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_HLINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_LINE, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_5_points[] = {
    178.9500f, 296.6690f, 130.1500f, 327.1590f, 130.1400f, 109.7200f, 306.7390f,
    149.3700f, 267.0890f,
};

static const VGFixedColor svg_rocket_shape_5_fill = {
    0xffe6b263 // ARGB
};

static const VGShape svg_rocket_shape_5 = {
    6, 9,                                                     // numCommands, numPoints
    svg_rocket_shape_5_commands,                              // commands
    svg_rocket_shape_5_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_5_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 109.7200f, 267.0890f, 178.9500f, 327.1590f },           // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_6                                       // next
};

static const uint8_t svg_rocket_shape_4_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_4_points[] = {
    208.5200f, 326.2390f, 168.5800f, 340.9490f, 157.6000f, 344.9990f, 145.2700f, 342.2890f, 137.0000f, 334.0090f, 130.1500f, 327.1590f,
    178.9500f, 296.6690f, 208.5200f, 326.2390f,
};

static const VGFixedColor svg_rocket_shape_4_fill = {
    0xffe6b263 // ARGB
};

static const VGShape svg_rocket_shape_4 = {
    7, 16,                                                    // numCommands, numPoints
    svg_rocket_shape_4_commands,                              // commands
    svg_rocket_shape_4_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_4_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 130.1500f, 296.6690f, 208.5200f, 342.8021f },           // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_5                                       // next
};

static const uint8_t svg_rocket_shape_3_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_3_points[] = {
    296.1100f, 120.3390f, 316.2900f, 140.5090f, 316.2900f, 173.2290f, 296.1100f, 193.3990f, 275.9400f, 213.5790f, 243.2200f, 213.5790f, 223.0500f, 193.3990f, 202.8700f, 173.2290f, 202.8700f, 140.5090f, 223.0500f, 120.3390f,
    243.2200f, 100.1590f, 275.9400f, 100.1590f, 296.1100f, 120.3390f,
};

static const VGFixedColor svg_rocket_shape_3_fill = {
    0xff8ecac1 // ARGB
};

static const VGShape svg_rocket_shape_3 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket_shape_3_commands,                              // commands
    svg_rocket_shape_3_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_3_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 207.9150f, 105.2040f, 311.2450f, 208.5340f },           // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_4                                       // next
};

static const uint8_t svg_rocket_shape_2_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_LINE, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_2_points[] = {
    309.9500f, 239.0990f, 311.6900f, 284.6990f, 295.1500f, 330.8790f, 260.3400f, 365.6890f, 249.6500f, 376.3690f, 237.9000f, 385.3390f, 225.4100f, 392.5790f, 208.5200f, 326.2390f,
    309.9500f, 239.0990f,
};

static const VGFixedColor svg_rocket_shape_2_fill = {
    0xfff2d59f // ARGB
};

static const VGShape svg_rocket_shape_2 = {
    6, 18,                                                    // numCommands, numPoints
    svg_rocket_shape_2_commands,                              // commands
    svg_rocket_shape_2_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_2_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 208.5200f, 239.0990f, 310.0742f, 392.5790f },           // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_3                                       // next
};

static const uint8_t svg_rocket_shape_1_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_HLINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_VLINE, VECTOR_PRIM_LINE, VECTOR_PRIM_HLINE,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_CLOSE,
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_1_points[] = {
    90.2100f, 207.9290f, 177.3500f, 106.5090f, 177.3600f, 211.0700f, 67.2690f,
    232.5000f, 45.8390f, 257.6700f, 30.4290f, 284.4800f, 21.0390f, 21.0490f, 395.4100f, 131.9790f, 395.4200f,
    386.0300f, 158.7890f, 370.6200f, 183.9590f, 349.1900f, 205.3890f, 309.9500f, 239.0990f, 208.5200f, 326.2390f, 178.9500f, 296.6690f,
    149.3700f, 267.0890f, 119.7900f, 237.5090f, 90.2100f, 207.9290f,
    296.1100f, 193.3990f, 316.2900f, 173.2290f, 316.2900f, 140.5090f, 296.1100f, 120.3390f, 275.9400f, 100.1590f, 243.2200f, 100.1590f, 223.0500f, 120.3390f, 202.8700f, 140.5090f, 202.8700f, 173.2290f, 223.0500f, 193.3990f,
    243.2200f, 213.5790f, 275.9400f, 213.5790f, 296.1100f, 193.3990f,
};

static const VGFixedColor svg_rocket_shape_1_fill = {
    0xfff2d59f // ARGB
};

static const VGShape svg_rocket_shape_1 = {
    22, 61,                                                   // numCommands, numPoints
    svg_rocket_shape_1_commands,                              // commands
    svg_rocket_shape_1_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_1_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 90.2100f, 21.0390f, 395.4200f, 326.2390f },             // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_2                                       // next
};

static const uint8_t svg_rocket_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_HLINE, VECTOR_PRIM_LINE,
    VECTOR_PRIM_VLINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket_shape_0_points[] = {
    399.7600f, 16.6990f, 409.8800f, 54.5390f, 408.4300f, 94.8290f, 395.4200f, 131.9790f, 395.4100f, 284.4800f, 21.0490f,
    21.0390f, 321.6300f, 8.0290f, 361.9200f, 6.5790f, 399.7600f, 16.6990f,
};

static const VGFixedColor svg_rocket_shape_0_fill = {
    0xffff7124 // ARGB
};

static const VGShape svg_rocket_shape_0 = {
    7, 18,                                                    // numCommands, numPoints
    svg_rocket_shape_0_commands,                              // commands
    svg_rocket_shape_0_points,                                // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket_shape_0_fill,                                 // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 284.4800f, 10.0594f, 406.3996f, 131.9790f },            // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket_shape_1                                       // next
};

static const uint8_t svg_rocket2_shape_26_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_26_points[] = {
    58.5000f, 15.7000f, 58.5000f, 16.1418f, 58.1418f, 16.5000f, 57.7000f, 16.5000f, 57.2582f, 16.5000f, 56.9000f, 16.1418f, 56.9000f, 15.7000f, 56.9000f, 15.2582f, 57.2582f, 14.9000f, 57.7000f, 14.9000f,
    58.1418f, 14.9000f, 58.5000f, 15.2582f, 58.5000f, 15.7000f,
};

static const VGFixedColor svg_rocket2_shape_26_fill = {
    0xffffffff // ARGB
};

static const VGShape svg_rocket2_shape_26 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_26_commands,                            // commands
    svg_rocket2_shape_26_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_26_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 56.9000f, 14.9000f, 58.5000f, 16.5000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    0                                                         // next
};

static const uint8_t svg_rocket2_shape_25_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_25_points[] = {
    56.1000f, 13.4000f, 56.1000f, 13.8418f, 55.7418f, 14.2000f, 55.3000f, 14.2000f, 54.8582f, 14.2000f, 54.5000f, 13.8418f, 54.5000f, 13.4000f, 54.5000f, 12.9582f, 54.8582f, 12.6000f, 55.3000f, 12.6000f,
    55.7418f, 12.6000f, 56.1000f, 12.9582f, 56.1000f, 13.4000f,
};

static const VGFixedColor svg_rocket2_shape_25_fill = {
    0xffffffff // ARGB
};

static const VGShape svg_rocket2_shape_25 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_25_commands,                            // commands
    svg_rocket2_shape_25_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_25_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 54.5000f, 12.6000f, 56.1000f, 14.2000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_26                                     // next
};

static const uint8_t svg_rocket2_shape_24_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_24_points[] = {
    53.8000f, 11.0000f, 53.8000f, 11.4418f, 53.4418f, 11.8000f, 53.0000f, 11.8000f, 52.5582f, 11.8000f, 52.2000f, 11.4418f, 52.2000f, 11.0000f, 52.2000f, 10.5582f, 52.5582f, 10.2000f, 53.0000f, 10.2000f,
    53.4418f, 10.2000f, 53.8000f, 10.5582f, 53.8000f, 11.0000f,
};

static const VGFixedColor svg_rocket2_shape_24_fill = {
    0xffffffff // ARGB
};

static const VGShape svg_rocket2_shape_24 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_24_commands,                            // commands
    svg_rocket2_shape_24_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_24_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 52.2000f, 10.2000f, 53.8000f, 11.8000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_25                                     // next
};

static const uint8_t svg_rocket2_shape_23_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_23_points[] = {
    51.4000f, 8.6000f, 51.4000f, 9.0418f, 51.0418f, 9.4000f, 50.6000f, 9.4000f, 50.1582f, 9.4000f, 49.8000f, 9.0418f, 49.8000f, 8.6000f, 49.8000f, 8.1582f, 50.1582f, 7.8000f, 50.6000f, 7.8000f,
    51.0418f, 7.8000f, 51.4000f, 8.1582f, 51.4000f, 8.6000f,
};

static const VGFixedColor svg_rocket2_shape_23_fill = {
    0xffffffff // ARGB
};

static const VGShape svg_rocket2_shape_23 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_23_commands,                            // commands
    svg_rocket2_shape_23_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_23_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 49.8000f, 7.8000f, 51.4000f, 9.4000f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_24                                     // next
};

static const uint8_t svg_rocket2_shape_22_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_22_points[] = {
    48.9000f, 6.9000f, 48.6000f, 7.2000f, 48.0000f, 7.2000f, 47.7000f, 6.9000f, 47.4000f, 6.6000f, 47.4000f, 6.0000f, 47.7000f, 5.7000f, 48.0000f, 5.4000f, 48.6000f, 5.4000f, 48.9000f, 5.7000f,
    49.2000f, 6.0000f, 49.2000f, 6.6000f, 48.9000f, 6.9000f
};

static const VGFixedColor svg_rocket2_shape_22_fill = {
    0xffffffff // ARGB
};

static const VGShape svg_rocket2_shape_22 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_22_commands,                            // commands
    svg_rocket2_shape_22_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_22_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 47.4750f, 5.4750f, 49.1250f, 7.1250f },                 // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_23                                     // next
};

static const uint8_t svg_rocket2_shape_21_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_21_points[] = {
    36.8000f, 30.5000f, 36.8000f, 32.3225f, 35.3225f, 33.8000f, 33.5000f, 33.8000f, 31.6775f, 33.8000f, 30.2000f, 32.3225f, 30.2000f, 30.5000f, 30.2000f, 28.6775f, 31.6775f, 27.2000f, 33.5000f, 27.2000f,
    35.3225f, 27.2000f, 36.8000f, 28.6775f, 36.8000f, 30.5000f,
};

static const VGFixedColor svg_rocket2_shape_21_fill = {
    0xff3baacf // ARGB
};

static const VGShape svg_rocket2_shape_21 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_21_commands,                            // commands
    svg_rocket2_shape_21_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_21_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 30.2000f, 27.2000f, 36.8000f, 33.8000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_22                                     // next
};

static const uint8_t svg_rocket2_shape_20_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_20_points[] = {
    38.5000f, 30.5000f, 38.5000f, 33.2614f, 36.2614f, 35.5000f, 33.5000f, 35.5000f, 30.7386f, 35.5000f, 28.5000f, 33.2614f, 28.5000f, 30.5000f, 28.5000f, 27.7386f, 30.7386f, 25.5000f, 33.5000f, 25.5000f,
    36.2614f, 25.5000f, 38.5000f, 27.7386f, 38.5000f, 30.5000f,
};

static const VGFixedColor svg_rocket2_shape_20_fill = {
    0xffedf4f9 // ARGB
};

static const VGShape svg_rocket2_shape_20 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_20_commands,                            // commands
    svg_rocket2_shape_20_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_20_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 28.5000f, 25.5000f, 38.5000f, 35.5000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_21                                     // next
};

static const uint8_t svg_rocket2_shape_19_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_19_points[] = {
    46.8000f, 20.5000f, 46.8000f, 22.3225f, 45.3225f, 23.8000f, 43.5000f, 23.8000f, 41.6775f, 23.8000f, 40.2000f, 22.3225f, 40.2000f, 20.5000f, 40.2000f, 18.6775f, 41.6775f, 17.2000f, 43.5000f, 17.2000f,
    45.3225f, 17.2000f, 46.8000f, 18.6775f, 46.8000f, 20.5000f,
};

static const VGFixedColor svg_rocket2_shape_19_fill = {
    0xff3baacf // ARGB
};

static const VGShape svg_rocket2_shape_19 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_19_commands,                            // commands
    svg_rocket2_shape_19_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_19_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 40.2000f, 17.2000f, 46.8000f, 23.8000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_20                                     // next
};

static const uint8_t svg_rocket2_shape_18_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_18_points[] = {
    48.5000f, 20.5000f, 48.5000f, 23.2614f, 46.2614f, 25.5000f, 43.5000f, 25.5000f, 40.7386f, 25.5000f, 38.5000f, 23.2614f, 38.5000f, 20.5000f, 38.5000f, 17.7386f, 40.7386f, 15.5000f, 43.5000f, 15.5000f,
    46.2614f, 15.5000f, 48.5000f, 17.7386f, 48.5000f, 20.5000f,
};

static const VGFixedColor svg_rocket2_shape_18_fill = {
    0xffedf4f9 // ARGB
};

static const VGShape svg_rocket2_shape_18 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_18_commands,                            // commands
    svg_rocket2_shape_18_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_18_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 38.5000f, 15.5000f, 48.5000f, 25.5000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_19                                     // next
};

static const uint8_t svg_rocket2_shape_17_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_17_points[] = {
    61.8000f, 2.2000f, 61.8000f, 2.2000f, 57.5000f, 3.1000f, 51.0000f, 6.8000f, 57.2000f, 13.0000f, 60.9000f, 6.5000f, 61.8000f, 2.2000f, 61.8000f, 2.2000f
};

static const VGFixedColor svg_rocket2_shape_17_fill = {
    0xfff15744 // ARGB
};

static const VGShape svg_rocket2_shape_17 = {
    4, 16,                                                    // numCommands, numPoints
    svg_rocket2_shape_17_commands,                            // commands
    svg_rocket2_shape_17_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_17_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 51.0000f, 2.2000f, 61.8000f, 13.0000f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_18                                     // next
};

static const uint8_t svg_rocket2_shape_16_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_16_points[] = {
    61.8000f, 2.2000f, 61.8000f, 2.2000f, 56.4000f, 2.0000f, 49.1000f, 4.8000f, 59.2000f, 14.9000f, 62.0000f, 7.6000f, 61.8000f, 2.2000f, 61.8000f, 2.2000f
};

static const VGFixedColor svg_rocket2_shape_16_fill = {
    0xffc94747 // ARGB
};

static const VGShape svg_rocket2_shape_16 = {
    4, 16,                                                    // numCommands, numPoints
    svg_rocket2_shape_16_commands,                            // commands
    svg_rocket2_shape_16_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_16_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 49.1000f, 2.1969f, 61.8031f, 14.9000f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_17                                     // next
};

static const uint8_t svg_rocket2_shape_15_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE
};

static const float svg_rocket2_shape_15_points[] = {
    20.1000f, 47.4000f, 19.8000f, 47.7000f, 19.2000f, 47.8000f, 19.0000f, 47.6000f, 16.3000f, 44.9000f, 16.1000f, 44.7000f, 16.2000f, 44.2000f, 16.6000f, 43.9000f,
    17.8000f, 42.7000f, 21.3000f, 46.2000f, 20.1000f, 47.4000f
};

static const VGFixedColor svg_rocket2_shape_15_fill = {
    0xff62727a // ARGB
};

static const VGShape svg_rocket2_shape_15 = {
    7, 22,                                                    // numCommands, numPoints
    svg_rocket2_shape_15_commands,                            // commands
    svg_rocket2_shape_15_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_15_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 16.2000f, 42.7000f, 21.3000f, 47.7041f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_16                                     // next
};

static const uint8_t svg_rocket2_shape_14_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE
};

static const float svg_rocket2_shape_14_points[] = {
    20.9000f, 48.2000f, 20.6000f, 48.5000f, 19.9000f, 48.5000f, 19.6000f, 48.2000f, 15.7000f, 44.3000f, 15.4000f, 44.0000f, 15.5000f, 43.4000f, 15.8000f, 43.1000f,
    17.0000f, 41.9000f, 22.1000f, 47.0000f, 20.9000f, 48.2000f
};

static const VGFixedColor svg_rocket2_shape_14_fill = {
    0xff3e4347 // ARGB
};

static const VGShape svg_rocket2_shape_14 = {
    7, 22,                                                    // numCommands, numPoints
    svg_rocket2_shape_14_commands,                            // commands
    svg_rocket2_shape_14_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_14_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 15.5189f, 41.9000f, 22.1000f, 48.4250f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_15                                     // next
};

static const uint8_t svg_rocket2_shape_13_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE
};

static const float svg_rocket2_shape_13_points[] = {
    22.6000f, 45.7000f, 22.1000f, 46.2000f, 21.5000f, 46.4000f, 21.2000f, 46.1000f, 17.8000f, 42.7000f, 17.5000f, 42.4000f, 17.7000f, 41.8000f, 18.2000f, 41.3000f,
    20.0000f, 39.5000f, 24.4000f, 43.9000f, 22.6000f, 45.7000f
};

static const VGFixedColor svg_rocket2_shape_13_fill = {
    0xfff15744 // ARGB
};

static const VGShape svg_rocket2_shape_13 = {
    7, 22,                                                    // numCommands, numPoints
    svg_rocket2_shape_13_commands,                            // commands
    svg_rocket2_shape_13_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_13_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 17.6590f, 39.5000f, 24.4000f, 46.2410f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_14                                     // next
};

static const uint8_t svg_rocket2_shape_12_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_LINE, VECTOR_PRIM_LINE, VECTOR_PRIM_LINE
};

static const float svg_rocket2_shape_12_points[] = {
    24.3000f, 47.5000f, 23.8000f, 48.0000f, 23.0000f, 48.0000f, 22.5000f, 47.5000f, 16.5000f, 41.5000f, 16.0000f, 41.0000f, 16.0000f, 40.1000f, 16.5000f, 39.6000f,
    18.3000f, 37.8000f, 26.1000f, 45.6000f, 24.3000f, 47.5000f
};

static const VGFixedColor svg_rocket2_shape_12_fill = {
    0xffc94747 // ARGB
};

static const VGShape svg_rocket2_shape_12 = {
    7, 22,                                                    // numCommands, numPoints
    svg_rocket2_shape_12_commands,                            // commands
    svg_rocket2_shape_12_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_12_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 16.1250f, 37.8000f, 26.1000f, 47.8750f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_13                                     // next
};

static const uint8_t svg_rocket2_shape_11_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_11_points[] = {
    45.8000f, 27.6000f, 34.2000f, 39.2000f, 22.6000f, 46.8000f, 19.9000f, 44.1000f, 17.2000f, 41.4000f, 24.8000f, 29.8000f, 36.4000f, 18.2000f, 50.0000f, 4.6000f, 62.0000f, 2.0000f, 62.0000f, 2.0000f,
    62.0000f, 2.0000f, 59.4000f, 14.0000f, 45.8000f, 27.6000f,
};

static const VGFixedColor svg_rocket2_shape_11_fill = {
    0xffdae3ea // ARGB
};

static const VGShape svg_rocket2_shape_11 = {
    6, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_11_commands,                            // commands
    svg_rocket2_shape_11_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_11_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 19.3541f, 2.0000f, 62.0000f, 44.6459f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_12                                     // next
};

static const uint8_t svg_rocket2_shape_10_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_10_points[] = {
    48.8000f, 30.9000f, 37.1000f, 42.5000f, 24.2000f, 48.8000f, 19.7000f, 44.3000f, 15.2000f, 39.8000f, 21.5000f, 26.9000f, 33.1000f, 15.2000f, 46.7000f, 1.6000f, 61.8000f, 2.2000f, 61.8000f, 2.2000f,
    61.8000f, 2.2000f, 62.3000f, 17.3000f, 48.8000f, 30.9000f
};

static const VGFixedColor svg_rocket2_shape_10_fill = {
    0xffc5d0d8 // ARGB
};

static const VGShape svg_rocket2_shape_10 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_10_commands,                            // commands
    svg_rocket2_shape_10_points,                              // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_10_fill,                               // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 18.2396f, 2.1961f, 61.8024f, 45.7604f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_11                                     // next
};

static const uint8_t svg_rocket2_shape_9_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_9_points[] = {
    33.7000f, 40.7000f, 36.9000f, 37.5000f, 46.8000f, 47.4000f, 32.1000f, 62.1000f, 32.1000f, 62.1000f, 32.1000f, 62.1000f, 41.3000f, 49.1000f, 33.7000f, 40.7000f
};

static const VGFixedColor svg_rocket2_shape_9_fill = {
    0xff428bc1 // ARGB
};

static const VGShape svg_rocket2_shape_9 = {
    4, 16,                                                    // numCommands, numPoints
    svg_rocket2_shape_9_commands,                             // commands
    svg_rocket2_shape_9_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_9_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 32.1000f, 37.5000f, 40.3267f, 62.1000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_10                                     // next
};

static const uint8_t svg_rocket2_shape_8_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_8_points[] = {
    26.0000f, 45.5000f, 36.4000f, 51.7000f, 32.1000f, 62.0000f, 32.1000f, 62.0000f, 32.1000f, 62.0000f, 46.8000f, 47.3000f, 36.9000f, 37.4000f, 26.0000f, 45.5000f,
};

static const VGFixedColor svg_rocket2_shape_8_fill = {
    0xff3baacf // ARGB
};

static const VGShape svg_rocket2_shape_8 = {
    5, 16,                                                    // numCommands, numPoints
    svg_rocket2_shape_8_commands,                             // commands
    svg_rocket2_shape_8_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_8_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 26.0000f, 37.4000f, 40.3267f, 62.0000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_9                                      // next
};

static const uint8_t svg_rocket2_shape_7_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_LINE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_7_points[] = {
    23.3000f, 30.3000f, 26.5000f, 27.1000f, 16.7000f, 17.2000f, 2.0000f, 31.9000f, 2.0000f, 31.9000f, 2.0000f, 31.9000f, 14.9000f, 22.7000f, 23.3000f, 30.3000f
};

static const VGFixedColor svg_rocket2_shape_7_fill = {
    0xff428bc1 // ARGB
};

static const VGShape svg_rocket2_shape_7 = {
    4, 16,                                                    // numCommands, numPoints
    svg_rocket2_shape_7_commands,                             // commands
    svg_rocket2_shape_7_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_7_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 2.0000f, 23.6733f, 26.5000f, 31.9000f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_8                                      // next
};

static const uint8_t svg_rocket2_shape_6_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_LINE,
    VECTOR_PRIM_CLOSE
};

static const float svg_rocket2_shape_6_points[] = {
    18.5000f, 38.0000f, 12.3000f, 27.6000f, 2.0000f, 31.9000f, 2.0000f, 31.9000f, 2.0000f, 31.9000f, 16.7000f, 17.2000f, 26.6000f, 27.1000f, 18.5000f, 38.0000f,
};

static const VGFixedColor svg_rocket2_shape_6_fill = {
    0xff3baacf // ARGB
};

static const VGShape svg_rocket2_shape_6 = {
    5, 16,                                                    // numCommands, numPoints
    svg_rocket2_shape_6_commands,                             // commands
    svg_rocket2_shape_6_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_6_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 2.0000f, 23.6733f, 26.6000f, 38.0000f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_7                                      // next
};

static const uint8_t svg_rocket2_shape_5_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_5_points[] = {
    13.9000f, 47.6000f, 16.1000f, 45.4000f, 16.3000f, 44.8000f, 17.7000f, 46.2000f, 19.1000f, 47.6000f, 18.5000f, 47.8000f, 16.3000f, 50.0000f, 14.6000f, 51.7000f, 12.5000f, 51.3000f, 12.5000f, 51.3000f,
    12.5000f, 51.3000f, 12.3000f, 49.3000f, 13.9000f, 47.6000f
};

static const VGFixedColor svg_rocket2_shape_5_fill = {
    0xfffdf516 // ARGB
};

static const VGShape svg_rocket2_shape_5 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_5_commands,                             // commands
    svg_rocket2_shape_5_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_5_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 12.4920f, 45.4469f, 18.4531f, 51.3410f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_6                                      // next
};

static const uint8_t svg_rocket2_shape_4_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_4_points[] = {
    15.0000f, 47.8000f, 17.3000f, 46.9000f, 17.8000f, 46.9000f, 17.1000f, 45.7000f, 16.4000f, 44.4000f, 16.1000f, 44.7000f, 13.8000f, 45.6000f, 12.1000f, 46.2000f, 11.7000f, 47.7000f, 11.7000f, 47.7000f,
    11.7000f, 47.7000f, 13.3000f, 48.4000f, 15.0000f, 47.8000f
};

static const VGFixedColor svg_rocket2_shape_4_fill = {
    0xfffdf516 // ARGB
};

static const VGShape svg_rocket2_shape_4 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_4_commands,                             // commands
    svg_rocket2_shape_4_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_4_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 11.7000f, 44.8233f, 17.3928f, 48.0430f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_5                                      // next
};

static const uint8_t svg_rocket2_shape_3_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_3_points[] = {
    17.1000f, 45.7000f, 15.8000f, 43.4000f, 15.3000f, 43.9000f, 11.1000f, 45.5000f, 8.0000f, 46.7000f, 7.4000f, 49.3000f, 7.4000f, 49.3000f, 7.4000f, 49.3000f, 10.2000f, 50.7000f, 13.3000f, 49.5000f,
    17.5000f, 47.9000f, 18.4000f, 47.9000f, 17.1000f, 45.7000f
};

static const VGFixedColor svg_rocket2_shape_3_fill = {
    0xffff9d27 // ARGB
};

static const VGShape svg_rocket2_shape_3 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_3_commands,                             // commands
    svg_rocket2_shape_3_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_3_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 7.4000f, 44.1353f, 17.6505f, 49.9860f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_4                                      // next
};

static const uint8_t svg_rocket2_shape_2_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_2_points[] = {
    16.2000f, 48.9000f, 17.1000f, 46.6000f, 17.1000f, 46.1000f, 18.3000f, 46.8000f, 19.6000f, 47.5000f, 19.3000f, 47.8000f, 18.4000f, 50.1000f, 17.8000f, 51.8000f, 16.3000f, 52.2000f, 16.3000f, 52.2000f,
    16.3000f, 52.2000f, 15.6000f, 50.7000f, 16.2000f, 48.9000f
};

static const VGFixedColor svg_rocket2_shape_2_fill = {
    0xfffdf516 // ARGB
};

static const VGShape svg_rocket2_shape_2 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_2_commands,                             // commands
    svg_rocket2_shape_2_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_2_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 15.9570f, 46.5072f, 19.1767f, 52.2000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_3                                      // next
};

static const uint8_t svg_rocket2_shape_1_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_1_points[] = {
    18.5000f, 52.8000f, 20.1000f, 48.6000f, 20.6000f, 48.1000f, 18.3000f, 46.8000f, 16.0000f, 45.5000f, 16.0000f, 46.4000f, 14.5000f, 50.6000f, 13.3000f, 53.7000f, 14.7000f, 56.5000f, 14.7000f, 56.5000f,
    14.7000f, 56.5000f, 17.4000f, 56.0000f, 18.5000f, 52.8000f
};

static const VGFixedColor svg_rocket2_shape_1_fill = {
    0xffff9d27 // ARGB
};

static const VGShape svg_rocket2_shape_1 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_1_commands,                             // commands
    svg_rocket2_shape_1_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_1_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 14.0140f, 46.2495f, 19.8647f, 56.5000f },               // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_2                                      // next
};

static const uint8_t svg_rocket2_shape_0_commands[] = {
    VECTOR_PRIM_MOVE, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC, VECTOR_PRIM_BEZIER_CUBIC,
    VECTOR_PRIM_BEZIER_CUBIC
};

static const float svg_rocket2_shape_0_points[] = {
    10.9000f, 48.7000f, 14.9000f, 44.7000f, 15.3000f, 43.7000f, 17.8000f, 46.2000f, 20.3000f, 48.7000f, 19.3000f, 49.0000f, 15.3000f, 53.1000f, 12.3000f, 56.1000f, 8.5000f, 55.5000f, 8.5000f, 55.5000f,
    8.5000f, 55.5000f, 7.9000f, 51.7000f, 10.9000f, 48.7000f
};

static const VGFixedColor svg_rocket2_shape_0_fill = {
    0xffff9d27 // ARGB
};

static const VGShape svg_rocket2_shape_0 = {
    5, 26,                                                    // numCommands, numPoints
    svg_rocket2_shape_0_commands,                             // commands
    svg_rocket2_shape_0_points,                               // points
    VG_FILL_NON_ZERO,                                         // drawingMode
    VG_FIXED_COLOR,                                           // fillMode
    VG_NONE,                                                  // strokeMode
    &svg_rocket2_shape_0_fill,                                // fillPaint
    0,                                                        // strokePaint
    0.0000f,                                                  // strokeWidth
    VG_STROKE_LINEJOIN_MITER,                                 // strokeLineJoin
    VG_STROKE_LINECAP_BUTT,                                   // strokeLineCap
    4.0000,                                                   // strokeMiterLimit
    255,                                                      // fillAlpha
    255,                                                      // strokeAlpha
    { 8.4510f, 44.8370f, 19.1630f, 55.5490f },                // boundingbox[4]
    { 1.0000f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 0.0000f }, // transformation[6]
    &svg_rocket2_shape_1                                      // next
};

static const touchgfx::VGObject svg_database[] = {
    { -0.0003f, 0.0099f, 416.4490f, 416.4291f, 416.4490f, 416.4490f, &svg_rocket_shape_0 },
    { 2.0000f, 2.0000f, 60.0000f, 60.1000f, 64.0000f, 64.0000f, &svg_rocket2_shape_0 }
};

namespace SVGDatabase
{
const touchgfx::VGObject* getInstance()
{
    return svg_database;
}

uint16_t getInstanceSize()
{
    return 2;
}
} // namespace SVGDatabase
